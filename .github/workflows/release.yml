name: Release
on:
  push:
    tags:
      - '*'
  pull_request:
    branches:
      - automate-release
    types:
      - closed

env:
  git-user: github-actions[bot]
  git-email: 41898282+github-actions[bot]@users.noreply.github.com

jobs:
  release:
    runs-on: ubuntu-22.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --force --tags

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Prepare GoReleaser Env
        run: |
          echo "IMAGE_REPOSITORY=$GITHUB_REPOSITORY_OWNER/botkube" >> $GITHUB_ENV 
          echo "TEST_IMAGE_REPOSITORY=$GITHUB_REPOSITORY_OWNER/botkube-test" >> $GITHUB_ENV 

      - name: Extract Previous Version
        id: prev-version
        run: |
          if [ -n "${{ github.ref_name }}" ]; then
            BASE_TAG=$(echo "${{ github.ref_name }}" | awk -F- '{print $1}')
          else 
            PR_BRANCH=$(echo ${{ github.head_ref }} | awk -F- '{print $1}') 
            if [[ "$PR_BRANCH" =~ ^release/.* ]]; then
              echo "${PR_BRANCH} is not a release branch, exiting..."
              exit 0
            fi
            BASE_TAG=$(echo "${PR_BRANCH}" | awk -F/ '{print $2}')
          fi
          git fetch origin "refs/notes/*:refs/notes/*"
          PREV_VERSION=$(git log --pretty=format:"%N" --show-notes="release/${BASE_TAG}" | awk NF | awk '{ print $2}')
          echo ::set-output name=previous-version::$PREV_VERSION

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          IMAGE_TAG: ${{ github.ref_name }}
          ANALYTICS_API_KEY: ${{ secrets.ANALYTICS_API_KEY }}

      - name: Generate Changelog
        id: generate-changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GH_TOKEN }}
          sinceTag: ${{ steps.prev-version.outputs.previous-version }}
          dueTag: ${{ github.ref_name }}
          stripHeaders: true
          stripGeneratorNotice: true
          compareLink: false

      - uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          body: ${{ steps.generate-changelog.outputs.changelog }}
          allow_override: true

